---
import Card from "../Card/index.astro";
import {retrieveTopSongs, getAlbumImageURL} from "../../lib/spotify"
import { Icon } from "astro-icon/components";
console.log("Client Side")

// Control number of songs to display
const numSongsDisplayed = 10;


let playlist = await retrieveTopSongs()
let firstSong = playlist[0]
// console.log(firstSong)
let {url: displayAlbumImageURL, height: displayAlbumImageHeight, width: displayAlbumImageWidth} = await getAlbumImageURL(firstSong.album.id)
// console.log(displayAlbumImageURL)

---

<!-- Can refer to this ETL project https://medium.com/apache-airflow/building-etl-pipeline-with-airflow-spotify-d1bccb2f4d13 -->

<Card colSpan="sm:col-span-2" rowSpan="sm:row-span-1 lg:row-span-2" title="" body="" addClass="" pad="px-6 py-4">
  <!-- Spotify Stats -->
     <div class="flex md:flex-row sm:flex-col md:items-center sm:items-start md:space-x-4 h-full">
      <!-- Image Section -->
      <div class="h-full rounded-lg items-start space-y-4 sm:my-4 md:my-2 sm:h-auto md:h-full sm:w-full md:w-auto">
        <a href={firstSong.album.external_urls.spotify} aria-label={firstSong.album.name}>
          <img 
          src={displayAlbumImageURL} 
          alt={`${firstSong.album.name}`}
          class="rounded-lg object-fill m-0" />
        </a>
      </div>

      <!-- Text Section -->
      <div class="flex flex-col sm:items-center md:items-start h-full w-full">
        <p class="text-lg font-semibold capitalize sm:mb-0 md:my-0 align-top italic" style="color: #1DB954">Been jamming to... <span class="not-italic">ðŸŽ§</span></p>
        
        <!-- Playlist Section -->
         <div class="flex-grow overflow-auto max-h-[calc(100vh-200px)] w-full">               
               {playlist.map((item, index) =>
            index < numSongsDisplayed ? 
            (
              <div id={index} class={`flex justify-between items-center my-1 ${index === 0 ? "text-lg text-nowrap" : "text-xs"}`}>
                <a href={item.preview_url} class="no-underline pr-1 align-middle flex items-center h-full" aria-label={`Preview ${item.name}`}>
                      {index === 0 
                      ? 
                      <Icon name="ph:play-circle-fill" class="h-7 align-middle" />
                      : 
                      <Icon name="ph:waveform-light" class="h-7 align-middle" />
                    } 
                  </a>
                  <span class="items-start font-extrabold">{item.name}</span>
                  <span class="flex-grow border-dotted border-t border-white mx-2"></span>
                  <span class="items-end text-end">{item.artists.map(({ name }) => name).join(", ")}</span>
                </div>
            ) 
            : null
          )}
        </div>
      </div>
    </div>
</Card>
